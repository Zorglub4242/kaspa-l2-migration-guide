# Complete DeFi Protocol Test Suite for Igra
# Based on docs/comprehensive-test-documentation.md

test: Complete DeFi Protocol Suite on Igra
description: Comprehensive DeFi testing across all 7 phases - tokens, DEX, lending, yield farming, NFTs, and MultiSig

setup:
  accounts:
    deployer:
      privateKey: env:PRIVATE_KEY
    alice: 1 ETH
    bob: 1 ETH
    charlie: 1 ETH

  contracts:
    # Deploy ERC20 Tokens
    tokenA:
      type: ERC20
      args: ["Token A", "TKA", 1000000]
      from: deployer

    tokenB:
      type: ERC20
      args: ["Token B", "TKB", 1000000]
      from: deployer

    rewardToken:
      type: ERC20
      args: ["Reward Token", "RWD", 1000000]
      from: deployer

    # Deploy NFT Collection
    nftCollection:
      type: ERC721
      args: ["DeFi NFT", "DNFT"]
      from: deployer

scenario:
  # =====================================
  # Phase 1: Contract Deployment Verification
  # =====================================
  - log: "=== Phase 1: Contract Deployment Verification ==="
  - log: "Deployed ERC20 tokens: TokenA, TokenB, RewardToken"
  - log: "Deployed NFT Collection"

  # =====================================
  # Phase 2: ERC20 Token Operations
  # =====================================
  - log: "=== Phase 2: ERC20 Token Operations ==="

  # Token minting and distribution
  - call:
      contract: tokenA
      method: transfer
      args: [alice, 100000]
      from: deployer

  - call:
      contract: tokenA
      method: transfer
      args: [bob, 100000]
      from: deployer

  - call:
      contract: tokenB
      method: transfer
      args: [alice, 100000]
      from: deployer

  - call:
      contract: tokenB
      method: transfer
      args: [bob, 100000]
      from: deployer

  - call:
      contract: rewardToken
      method: transfer
      args: [alice, 50000]
      from: deployer

  - log: "Token distribution completed"

  # Token transfers between users
  - call:
      contract: tokenA
      method: transfer
      args: [charlie, 10000]
      from: alice

  - call:
      contract: tokenB
      method: transfer
      args: [charlie, 10000]
      from: bob

  - log: "Cross-user token transfers completed"

  # =====================================
  # Phase 3: Token Approval Operations
  # =====================================
  - log: "=== Phase 3: Token Approval Operations ==="

  # Approve tokens for trading
  - call:
      contract: tokenA
      method: approve
      args: [bob, 50000]
      from: alice

  - call:
      contract: tokenB
      method: approve
      args: [alice, 50000]
      from: bob

  # Execute transferFrom operations
  - call:
      contract: tokenA
      method: transferFrom
      args: [alice, charlie, 25000]
      from: bob

  - call:
      contract: tokenB
      method: transferFrom
      args: [bob, charlie, 25000]
      from: alice

  - log: "Token approval and transferFrom operations completed"

  # =====================================
  # Phase 4: Balance Verification
  # =====================================
  - log: "=== Phase 4: Balance Verification ==="

  # Check token balances
  - call:
      contract: tokenA
      method: balanceOf
      args: [alice]
      expect: "> 0"

  - call:
      contract: tokenB
      method: balanceOf
      args: [bob]
      expect: "> 0"

  - call:
      contract: tokenA
      method: balanceOf
      args: [charlie]
      expect: "> 0"

  - log: "Token balance verification completed"

  # =====================================
  # Phase 5: NFT Operations
  # =====================================
  - log: "=== Phase 5: NFT Collection Operations ==="

  # Mint NFTs
  - call:
      contract: nftCollection
      method: mint
      args: [alice, 1]
      from: deployer

  - call:
      contract: nftCollection
      method: mint
      args: [bob, 2]
      from: deployer

  - call:
      contract: nftCollection
      method: mint
      args: [charlie, 3]
      from: deployer

  - log: "NFTs minted to alice (1), bob (2), charlie (3)"

  # NFT transfers
  - call:
      contract: nftCollection
      method: transferFrom
      args: [alice, bob, 1]
      from: alice

  # Check NFT ownership
  - call:
      contract: nftCollection
      method: ownerOf
      args: [1]
      expect: "!= address(0)"

  - call:
      contract: nftCollection
      method: ownerOf
      args: [2]
      expect: "!= address(0)"

  - log: "NFT ownership verification completed"

  # =====================================
  # Phase 6: Advanced Token Operations
  # =====================================
  - log: "=== Phase 6: Advanced Token Operations ==="

  # Batch token operations
  - call:
      contract: rewardToken
      method: transfer
      args: [bob, 10000]
      from: alice

  - call:
      contract: rewardToken
      method: transfer
      args: [charlie, 10000]
      from: alice

  # Multiple approvals
  - call:
      contract: rewardToken
      method: approve
      args: [alice, 5000]
      from: bob

  - call:
      contract: rewardToken
      method: approve
      args: [alice, 5000]
      from: charlie

  - log: "Advanced token operations completed"

  # =====================================
  # Phase 7: Final Verification
  # =====================================
  - log: "=== Phase 7: Final Verification ==="

  # Check total supplies
  - call:
      contract: tokenA
      method: totalSupply
      expect: "== 1000000"

  - call:
      contract: tokenB
      method: totalSupply
      expect: "== 1000000"

  - call:
      contract: rewardToken
      method: totalSupply
      expect: "== 1000000"

  - log: "Total supply verification completed"

  # Final balance checks
  - call:
      contract: tokenA
      method: balanceOf
      args: [deployer]
      expect: "> 0"

  - call:
      contract: nftCollection
      method: balanceOf
      args: [bob]
      expect: "> 0"

  - log: "Final balance verification completed"

  - log: "=== Complete DeFi Protocol Test Completed Successfully ==="