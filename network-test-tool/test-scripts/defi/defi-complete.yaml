test: DeFi Test Suite
description: COMPLETE DEFI PROTOCOL TEST SUITE
network:
  - kasplex
  - igra
  - sepolia
variables:
  initial_supply: 1000000
  initial_liquidity: 100000
  loan_amount: 1000
  collateral_ratio: 1.5
setup:
  accounts:
    deployer: 100 ETH
    alice: 10 ETH
    bob: 10 ETH
    charlie: 10 ETH
  contracts:
    mockerc20:
      type: MockERC20
      args: []
      from: deployer
    mockdex:
      type: MockDEX
      args: []
      from: deployer
    mocklendingprotocol:
      type: MockLendingProtocol
      args: []
      from: deployer
    mockyieldfarm:
      type: MockYieldFarm
      args: []
      from: deployer
    mockerc721collection:
      type: MockERC721Collection
      args: []
      from: deployer
    mockmultisigwallet:
      type: MockMultiSigWallet
      args: []
      from: deployer
scenario:
  - log: '=== DeFi Test Suite ==='
  - log: Setting up tokens
  - token.transfer: deployer -> alice, 10000
  - token.transfer: deployer -> bob, 10000
  - log: Testing DEX operations
  - token.approve: alice -> dex, 5000
    from: alice
  - dex.addLiquidity: '[token, 1000, 1000]'
    from: alice
  - dex.swap: '[token, 100]'
    from: bob
  - log: Testing lending protocol
  - token.approve: bob -> lending, 2000
    from: bob
  - lending.deposit: '[token, 2000]'
    from: bob
  - lending.borrow: '[token, 500]'
    from: bob
  - lending.repay: '[token, 500]'
    from: bob
  - log: Testing yield farming
  - lpToken.approve: alice -> farm, 100
    from: alice
  - farm.stake: '[100]'
    from: alice
  - wait: 10s
  - farm.getReward: '[]'
    from: alice
  - log: Testing NFT operations
  - nft.mint: '[alice, 1]'
    from: deployer
  - nft.transferFrom: '[alice, bob, 1]'
    from: alice
  - assert: token.balanceOf(alice) > 0
  - assert: token.balanceOf(bob) > 0
  - assert: nft.ownerOf(1) == bob
cleanup:
  - log: Test cleanup
  - call:
      contract: lending
      method: pause
      from: deployer
_migration:
  source: complete-defi-suite.js
  timestamp: '2025-09-18T14:02:34.319Z'
  version: 1.0.0
