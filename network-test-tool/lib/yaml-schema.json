{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "YAML Test Definition Schema",
  "description": "Schema for YAML-based blockchain testing",
  "type": "object",
  "required": ["test", "scenario"],
  "properties": {
    "test": {
      "type": "string",
      "description": "Name of the test",
      "minLength": 1
    },
    "description": {
      "type": "string",
      "description": "Test description"
    },
    "network": {
      "oneOf": [
        {
          "type": "string",
          "enum": ["sepolia", "kasplex", "igra", "ethereum", "localhost"]
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1
        }
      ],
      "description": "Target network(s) for test execution"
    },
    "config": {
      "type": "object",
      "description": "Test configuration options",
      "properties": {
        "timeout": {
          "type": "integer",
          "minimum": 1000,
          "description": "Test timeout in milliseconds"
        },
        "retries": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of retry attempts"
        },
        "parallel": {
          "type": "boolean",
          "description": "Run scenarios in parallel"
        },
        "gasPrice": {
          "type": "string",
          "description": "Gas price override"
        },
        "gasLimit": {
          "type": "string",
          "description": "Gas limit override"
        }
      }
    },
    "variables": {
      "type": "object",
      "description": "Global variables for the test",
      "additionalProperties": true
    },
    "data": {
      "oneOf": [
        {
          "type": "string",
          "description": "Path to data file or URL"
        },
        {
          "type": "object",
          "properties": {
            "source": {
              "type": "string",
              "description": "Data source path or URL"
            },
            "type": {
              "type": "string",
              "enum": ["csv", "json", "database", "api"],
              "description": "Data source type"
            },
            "options": {
              "type": "object",
              "description": "Data source specific options"
            }
          },
          "required": ["source"]
        }
      ],
      "description": "External data source for data-driven testing"
    },
    "keywords": {
      "oneOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of keyword file paths to import"
        },
        {
          "type": "object",
          "description": "Inline keyword definitions",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              },
              "params": {
                "type": "array"
              },
              "steps": {
                "type": "array"
              },
              "returns": {}
            }
          }
        }
      ]
    },
    "testData": {
      "type": "object",
      "description": "Inline test data for data-driven testing",
      "additionalProperties": true
    },
    "setup": {
      "type": "object",
      "description": "Test setup phase",
      "properties": {
        "accounts": {
          "type": "object",
          "description": "Account definitions",
          "additionalProperties": {
            "oneOf": [
              {
                "type": "string",
                "description": "Initial balance"
              },
              {
                "type": "object",
                "properties": {
                  "balance": {
                    "type": "string"
                  },
                  "privateKey": {
                    "type": "string"
                  },
                  "mnemonic": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        },
        "contracts": {
          "type": "object",
          "description": "Contract deployments",
          "additionalProperties": {
            "oneOf": [
              {
                "type": "string",
                "description": "Contract constructor call"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Contract type or path to ABI"
                  },
                  "args": {
                    "type": "array",
                    "description": "Constructor arguments"
                  },
                  "value": {
                    "type": "string",
                    "description": "ETH value to send"
                  },
                  "from": {
                    "type": "string",
                    "description": "Deployer account"
                  }
                }
              }
            ]
          }
        },
        "fork": {
          "type": "object",
          "description": "Network forking configuration",
          "properties": {
            "network": {
              "type": "string",
              "description": "Network to fork"
            },
            "block": {
              "type": "integer",
              "description": "Block number to fork from"
            },
            "impersonate": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Addresses to impersonate"
            }
          }
        }
      }
    },
    "scenario": {
      "oneOf": [
        {
          "type": "array",
          "description": "List of test actions",
          "items": {
            "$ref": "#/definitions/action"
          },
          "minItems": 1
        },
        {
          "type": "object",
          "description": "Named scenario sections",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/action"
            }
          }
        }
      ]
    },
    "cleanup": {
      "type": "array",
      "description": "Cleanup actions",
      "items": {
        "$ref": "#/definitions/action"
      }
    },
    "hooks": {
      "type": "object",
      "description": "Test lifecycle hooks",
      "properties": {
        "beforeAll": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/action"
          }
        },
        "beforeEach": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/action"
          }
        },
        "afterEach": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/action"
          }
        },
        "afterAll": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/action"
          }
        }
      }
    }
  },
  "definitions": {
    "action": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "transfer": {
              "type": "string",
              "pattern": "^.+\\s*->\\s*.+,\\s*.+$",
              "description": "Transfer: from -> to, amount"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "call": {
              "type": "object",
              "properties": {
                "contract": {
                  "type": "string"
                },
                "method": {
                  "type": "string"
                },
                "args": {
                  "type": "array"
                },
                "from": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "expect": {
                  "oneOf": [
                    { "type": "string" },
                    { "type": "number" },
                    { "type": "boolean" },
                    { "type": "object" },
                    { "type": "array" }
                  ]
                }
              },
              "required": ["contract", "method"]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "deploy": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "contract": {
                  "type": "string"
                },
                "args": {
                  "type": "array"
                },
                "from": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "required": ["name", "contract"]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "check": {
              "type": "string",
              "description": "Assertion expression"
            },
            "message": {
              "type": "string",
              "description": "Assertion failure message"
            }
          },
          "required": ["check"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "wait": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Wait duration (e.g., '5s', '1000ms')"
                },
                {
                  "type": "integer",
                  "description": "Wait duration in milliseconds"
                },
                {
                  "type": "object",
                  "properties": {
                    "blocks": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "confirmations": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "condition": {
                      "type": "string"
                    }
                  }
                }
              ]
            },
            "then": {
              "oneOf": [
                {
                  "$ref": "#/definitions/action"
                },
                {
                  "type": "object"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "loop": {
              "type": "object",
              "properties": {
                "times": {
                  "oneOf": [
                    { "type": "integer", "minimum": 1 },
                    { "type": "string" }
                  ]
                },
                "over": {
                  "type": "string",
                  "description": "Variable to iterate over"
                },
                "actions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/action"
                  }
                }
              },
              "required": ["actions"]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "measure": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "start": {
                  "oneOf": [
                    { "type": "boolean" },
                    { "type": "string" }
                  ]
                },
                "end": {
                  "oneOf": [
                    { "type": "boolean" },
                    { "type": "string" }
                  ]
                },
                "metric": {
                  "type": "string",
                  "enum": ["time", "gas", "blocks", "confirmations"]
                },
                "value": {
                  "oneOf": [
                    { "type": "string" },
                    { "type": "number" }
                  ]
                }
              },
              "required": ["name"]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "log": {
              "type": "string",
              "description": "Message to log"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "set": {
              "type": "object",
              "description": "Set variable",
              "additionalProperties": true
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "if": {
              "oneOf": [
                { "type": "string" },
                { "type": "object" }
              ]
            },
            "then": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/action"
              }
            },
            "else": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/action"
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "parallel": {
              "oneOf": [
                {
                  "type": "array",
                  "description": "Actions to run in parallel",
                  "items": {
                    "$ref": "#/definitions/action"
                  },
                  "minItems": 2
                },
                {
                  "type": "object",
                  "properties": {
                    "actions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/action"
                      }
                    },
                    "maxConcurrency": {
                      "type": "integer"
                    },
                    "failFast": {
                      "type": "boolean"
                    },
                    "batch": {
                      "type": "object"
                    },
                    "forEach": {
                      "type": "object"
                    },
                    "map": {},
                    "filter": {},
                    "race": {
                      "type": "boolean"
                    },
                    "timeout": {
                      "type": "integer"
                    }
                  }
                }
              ]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "keyword": {
              "type": "string",
              "description": "Keyword name to execute"
            },
            "args": {
              "type": "object",
              "description": "Keyword arguments"
            }
          },
          "required": ["keyword"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "wallet": {
              "type": "object",
              "properties": {
                "action": {
                  "type": "string",
                  "enum": ["connect", "sign", "approve", "reject", "switch"]
                },
                "params": {
                  "type": "object"
                }
              },
              "required": ["action"]
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "foreach": {
              "type": "object",
              "properties": {
                "item": {
                  "type": "string",
                  "description": "Variable name for current item"
                },
                "index": {
                  "type": "string",
                  "description": "Variable name for current index"
                },
                "in": {
                  "oneOf": [
                    { "type": "array" },
                    { "type": "string" }
                  ],
                  "description": "Collection to iterate over"
                },
                "do": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/action"
                  }
                },
                "map": {
                  "description": "Array to map over"
                },
                "filter": {
                  "description": "Array to filter"
                },
                "transform": {
                  "type": "string",
                  "description": "Transform expression for map"
                },
                "condition": {
                  "type": "string",
                  "description": "Filter condition"
                },
                "returns": {
                  "type": "string",
                  "description": "Variable to store result"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "while": {
              "oneOf": [
                {
                  "type": "string",
                  "description": "Condition to evaluate"
                },
                {
                  "type": "object",
                  "properties": {
                    "condition": {
                      "type": "string"
                    },
                    "do": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/action"
                      }
                    }
                  },
                  "required": ["do"]
                }
              ]
            },
            "do": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/action"
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "repeat": {
              "oneOf": [
                {
                  "type": "integer",
                  "minimum": 1
                },
                {
                  "type": "object",
                  "properties": {
                    "times": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "do": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/action"
                      }
                    }
                  }
                }
              ]
            },
            "do": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/action"
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "try": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/action"
              }
            },
            "catch": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/action"
              }
            },
            "finally": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/action"
              }
            }
          },
          "required": ["try"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "assert": {
              "type": "string",
              "description": "Condition to assert"
            },
            "message": {
              "type": "string",
              "description": "Error message if assertion fails"
            }
          },
          "required": ["assert"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "run": {
              "type": "string",
              "description": "Keyword to run"
            },
            "params": {
              "description": "Keyword parameters"
            },
            "returns": {
              "type": "string",
              "description": "Variable to store return value"
            }
          },
          "required": ["run"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "contract": {
              "type": "object",
              "properties": {
                "deploy": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "from": {
                      "type": "string"
                    },
                    "args": {
                      "type": "array"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                "call": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "method": {
                      "type": "string"
                    },
                    "args": {
                      "type": "array"
                    },
                    "from": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "returns": {
              "type": "string",
              "description": "Variable to store return value"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "call": {
              "type": "string",
              "description": "Simple function call expression (e.g., Math.max(a, b))"
            },
            "returns": {
              "type": "string",
              "description": "Variable to store return value"
            }
          },
          "required": ["call"],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "else": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/action"
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "if": {
                      "type": "string",
                      "description": "Else-if condition"
                    },
                    "then": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/action"
                      }
                    },
                    "else": {
                      "oneOf": [
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/action"
                          }
                        },
                        {
                          "$ref": "#/definitions/action"
                        }
                      ]
                    }
                  }
                }
              ]
            }
          },
          "additionalProperties": false
        }
      ]
    }
  }
}