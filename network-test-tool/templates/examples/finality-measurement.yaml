# Finality Measurement Example
# Measure transaction finality without hardcoded logic

test: Custom Finality Measurement
description: Measure how long transactions take to become final
network: [kasplex, igra, sepolia]

variables:
  test_iterations: 10
  confirmation_threshold: 12  # blocks for finality

setup:
  accounts:
    sender: 10 ETH
    receiver: 0 ETH

scenario:
  - log: "Starting finality measurements"

  - loop:
      times: test_iterations
      actions:
        - log: "Iteration {_iteration}: Measuring finality"

        # Record start block
        - set:
            start_block: block.number

        # Send transaction
        - transfer: sender -> receiver, 0.1 ETH

        # Store transaction hash
        - set:
            tx_hash_{_index}: _lastTxHash
            tx_block_{_index}: _lastBlock

        # Measure time to various confirmation levels
        - measure:
            name: "1-confirmation-time-{_index}"
            metric: time
            start:
              log: "Transaction sent"
            end:
              wait:
                confirmations: 1

        - measure:
            name: "6-confirmation-time-{_index}"
            metric: time
            start:
              log: "1 confirmation reached"
            end:
              wait:
                confirmations: 6

        - measure:
            name: "finality-time-{_index}"
            metric: time
            start:
              log: "6 confirmations reached"
            end:
              wait:
                confirmations: confirmation_threshold

        # Calculate block depth
        - set:
            current_block: block.number
            blocks_elapsed: current_block - tx_block_{_index}

        - log: "Transaction final after {blocks_elapsed} blocks"

        # Test for reorg detection (optional)
        - call:
            contract: provider
            method: getTransactionReceipt
            args: [tx_hash_{_index}]
            expect: "!= null"

  # Calculate averages
  - log: "Finality test complete"
  - log: "Average 1-conf time: {avg(1-confirmation-time-*)}"
  - log: "Average 6-conf time: {avg(6-confirmation-time-*)}"
  - log: "Average finality time: {avg(finality-time-*)}"