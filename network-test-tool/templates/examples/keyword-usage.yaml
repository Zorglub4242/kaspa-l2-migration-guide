# Keyword Usage Example
# Demonstrates reusable keywords for common operations

test: Keyword Library Demo
network: kasplex
report: detailed

# Import keyword libraries
keywords:
  - ./templates/keywords/common.yaml
  - ./templates/keywords/defi.yaml

# Define custom keywords inline
keywords:
  my-custom-setup:
    description: "Custom setup for this test"
    params: [tokenSupply]
    steps:
      - run: setup-accounts
        params:
          - [{name: alice, balance: "10 ETH"}, {name: bob, balance: "5 ETH"}]
      - run: deploy-token
        params: ["TestToken", "TEST", "{{tokenSupply}}"]
        returns: token
      - run: distribute-tokens
        params: ["{{token}}", ["alice", "bob"], 1000]
      - return: "{{token}}"

scenario:
  # Use built-in keyword
  - run: setup-test-environment
    params:
      config:
        accounts: [{name: alice, balance: "10 ETH"}, {name: bob, balance: "5 ETH"}]
        token: {name: "MyToken", symbol: "MTK", supply: 1000000}
    returns: token

  # Use custom keyword
  - run: my-custom-setup
    params: [1000000]
    returns: customToken

  # Chain multiple keywords
  - run: check-balance
    params: [alice, "10 ETH"]

  - run: distribute-tokens
    params: ["{{token}}", ["alice", "bob", "charlie"], 100]

  # Use DeFi keywords
  - run: setup-dex-with-liquidity
    params: ["{{token}}", "{{customToken}}", 10000, 10000]
    returns: dex

  - run: perform-swap
    params: ["{{dex}}", "{{token}}", "{{customToken}}", 100, 95, alice]
    returns: swapAmounts

  # Conditional with keyword
  - if: "{{swapAmounts[1]}} > 95"
    then:
      - run: add-liquidity
        params: ["{{dex}}", "{{token}}", "{{customToken}}", 5000, 5000]

  # Parallel keyword execution
  - parallel:
      - run: check-balance
        params: [alice, "10 ETH"]
      - run: check-token-balance
        params: ["{{token}}", alice, 100]
      - run: check-token-balance
        params: ["{{customToken}}", alice, 100]

cleanup:
  - run: cleanup-test