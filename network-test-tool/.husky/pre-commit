#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Pre-commit hook to ensure tests pass before committing

echo "🧪 Running pre-commit tests..."

# Check for changes in JavaScript files
CHANGED_JS=$(git diff --cached --name-only --diff-filter=ACM | grep '\.js$' || true)

if [ -n "$CHANGED_JS" ]; then
  echo "📝 JavaScript files changed. Running tests..."

  # Run unit tests for changed files
  npm test -- --findRelatedTests $CHANGED_JS --passWithNoTests

  if [ $? -ne 0 ]; then
    echo "❌ Tests failed. Please fix tests before committing."
    echo "💡 Run 'npm test' to see all test failures."
    exit 1
  fi

  # Check test coverage for new files
  NEW_FILES=$(git diff --cached --name-only --diff-filter=A | grep '\.js$' || true)
  if [ -n "$NEW_FILES" ]; then
    echo "📊 Checking test coverage for new files..."

    # Check if corresponding test files exist
    for file in $NEW_FILES; do
      # Skip test files themselves
      if echo "$file" | grep -q "test.js$"; then
        continue
      fi

      # Skip migration scripts and configs
      if echo "$file" | grep -q "migrate\|config\|setup"; then
        continue
      fi

      # Construct expected test file path
      TEST_FILE=$(echo "$file" | sed 's/\.js$/.test.js/' | sed 's/^lib\//\_\_tests\_\_\/unit\//' | sed 's/^scripts\//\_\_tests\_\_\/integration\//')

      if [ ! -f "$TEST_FILE" ]; then
        # Also check E2E tests
        E2E_TEST="yaml-system-e2e-tests/__tests__/$(basename $file .js).test.js"
        if [ ! -f "$E2E_TEST" ]; then
          echo "⚠️  Warning: No test file found for $file"
          echo "    Expected: $TEST_FILE or $E2E_TEST"
          echo ""
          echo "❓ Are you sure you want to commit without tests? (y/n)"
          read -r response
          if [ "$response" != "y" ]; then
            echo "❌ Commit cancelled. Please add tests for $file"
            exit 1
          fi
        fi
      fi
    done
  fi
fi

# Check for changes in YAML files
CHANGED_YAML=$(git diff --cached --name-only --diff-filter=ACM | grep '\.yaml$' || true)

if [ -n "$CHANGED_YAML" ]; then
  echo "📝 YAML files changed. Validating syntax..."

  for file in $CHANGED_YAML; do
    # Skip non-test YAML files
    if echo "$file" | grep -q "migrations\|templates"; then
      # Validate YAML syntax
      node -e "const yaml = require('js-yaml'); const fs = require('fs'); try { yaml.load(fs.readFileSync('$file', 'utf8')); console.log('✓ $file'); } catch(e) { console.error('✗ $file: ' + e.message); process.exit(1); }"

      if [ $? -ne 0 ]; then
        echo "❌ YAML validation failed for $file"
        exit 1
      fi
    fi
  done
fi

echo "✅ Pre-commit checks passed!"

# Run quick lint check
echo "🔍 Running linter..."
npm run lint --silent 2>/dev/null || true

echo "✨ Ready to commit!"